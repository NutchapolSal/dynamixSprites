# This is a basic workflow to help you get started with Actions

name: autoRelease

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          for i in */; do zip -r "${i%/}.zip" "$i"; done
          
      - name: Make tag (1)
        run: echo "CURRENT_TAG=$(date +%Y.%m.%d)" >> $GITHUB_ENV
        
      - name: Make tag (2)
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ env.CURRENT_TAG }}
          tag_prefix: ""

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.zip
          tag_name: ${{ steps.tag_version.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
